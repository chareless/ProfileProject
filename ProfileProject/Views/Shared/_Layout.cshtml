@inject IHttpContextAccessor HttpContextAccessor

@{
    var user = HttpContextAccessor.HttpContext.Session.GetString("Username");
    var id = HttpContextAccessor.HttpContext.Session.GetInt32("UserId");
    var admin = HttpContextAccessor.HttpContext.Session.GetInt32("IsAdmin");
}

<!DOCTYPE html>
<html lang="en">
<head>
    @Html.Partial("~/Views/Shared/_head-page-meta.cshtml")
    @RenderSection("styles", required: false)
    @Html.Partial("~/Views/Shared/_head-css.cshtml")
    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">

</head>
<!-- [Head] end -->
<!-- [Body] Start -->
<body data-pc-preset="@TempData["PresetTheme"]" data-pc-sidebar-caption="@TempData["CaptionShow"]" data-pc-direction="@TempData["SetRtlLayout"]" data-pc-theme_contrast="@TempData["ThemeContrast"]" data-pc-theme="@TempData["SetDarkLayout"]">
    @Html.Partial("~/Views/Shared/_layout-vertical.cshtml")

    <!-- [ Main Content ] start -->
    <div class="pc-container">
        <div class="pc-content">
            @if (TempData["AlertMessage"] != null)
            {
                AlertMessage alertMessage = JsonConvert.DeserializeObject<AlertMessage>(TempData["AlertMessage"] as String);

                <script>
                                 document.addEventListener('DOMContentLoaded', function () {
                                     Swal.fire({
                                         icon: '@GetSweetAlertIcon(alertMessage.AlertType)',
                                             title: @Html.Raw(JsonConvert.SerializeObject(alertMessage.Title)),
                                             text: @Html.Raw(JsonConvert.SerializeObject(alertMessage.Message)),
                                             confirmButtonText: 'Tamam',
                                     });
                                 });

                    @functions {
                    private string GetSweetAlertIcon(string alertType)
                    {
                        // AlertType değerlerinizi SweetAlert icon türlerine map edin
                        switch (alertType.ToLower())
                        {
                            case "success":
                                return "success";
                            case "danger":
                                return "error";
                            case "error":
                                return "error";
                            case "warning":
                                return "warning";
                            case "info":
                                return "info";
                            case "question":
                                return "question";
                            default:
                                return "info";
                        }
                    }
                }
            </script>
            }
            @if (!ViewData.ModelState.IsValid)
            {
                <div class="alert alert-danger" style="z-index: 2;">
                    <ul>
                        @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                        {
                            <li>@error.ErrorMessage</li>
                        }
                    </ul>
                </div>
            }
            @RenderBody()
        </div>
    </div>
    <!-- [ Main Content ] end -->
    @Html.Partial("~/Views/Shared/_footer-block.cshtml")
    @Html.Partial("~/Views/Shared/_footer-js.cshtml")
    @Html.Partial("~/Views/Shared/_customizer.cshtml")
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var alertMessage = @Html.Raw(JsonConvert.SerializeObject(TempData["AlertMessage"]));
            if (alertMessage) {
                var alertModal = new bootstrap.Modal(document.getElementById('alertModal'));
                alertModal.show();
            }
        });
    </script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="/assets/js/plugins/sweetalert2.all.min.js"></script>
    <script src="/assets/js/pages/ac-alert.js"></script>
    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
