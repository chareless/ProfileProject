<!DOCTYPE html>
<html lang="en">

<head>
    @Html.Partial("~/Views/Shared/_head-page-meta.cshtml")
    @Html.Partial("~/Views/Shared/_head-css.cshtml")
    @RenderSection("styles", required: false)
    <!-- SweetAlert2 CSS -->
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
</head>
<body data-pc-preset="@TempData["PresetTheme"]" data-pc-sidebar-caption="@TempData["CaptionShow"]" data-pc-direction="@TempData["SetRtlLayout"]" data-pc-theme_contrast="@TempData["ThemeContrast"]" data-pc-theme="@TempData["SetDarkLayout"]" class="landing-page">
    <!-- [ Main Content ] start -->
    @Html.Partial("~/Views/Shared/_loader.cshtml")

    @if (TempData["AlertMessage"] != null)
    {
        AlertMessage alertMessage = JsonConvert.DeserializeObject<AlertMessage>(TempData["AlertMessage"] as String);

        <script>
             document.addEventListener('DOMContentLoaded', function () {
                 Swal.fire({
                     icon: '@GetSweetAlertIcon(alertMessage.AlertType)',
                         title: @Html.Raw(JsonConvert.SerializeObject(alertMessage.Title)),
                         text: @Html.Raw(JsonConvert.SerializeObject(alertMessage.Message)),
                         confirmButtonText: 'Tamam',
                 });
             });

            @functions {
            private string GetSweetAlertIcon(string alertType)
            {
                // AlertType değerlerinizi SweetAlert icon türlerine map edin
                switch (alertType.ToLower())
                {
                    case "success":
                        return "success";
                    case "danger":
                        return "error";
                    case "error":
                        return "error";
                    case "warning":
                        return "warning";
                    case "info":
                        return "info";
                    case "question":
                        return "question";
                    default:
                        return "info";
                }
            }
        }
    </script>
    }

    @RenderBody()
    @Html.Partial("~/Views/Shared/_footer-js.cshtml")
    <script>
                 document.addEventListener('DOMContentLoaded', function () {
            var alertMessage = @Html.Raw(JsonConvert.SerializeObject(TempData["AlertMessage"]));
            if (alertMessage) {
                var alertModal = new bootstrap.Modal(document.getElementById('alertModal'));
                alertModal.show();
            }
        });
    </script>
    <!-- SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    @await RenderSectionAsync("scripts", required: false)
    @Html.Partial("~/Views/Shared/_customizer.cshtml")
</body>

</html>