@model User
@inject IHttpContextAccessor HttpContextAccessor
@{
    var session = HttpContextAccessor.HttpContext.Session;

    var id = session?.GetInt32("UserId");

    ViewBag.Title = "Profile Project";
    ViewBag.BreadcrumbItemActive = Model.NameSurname;
}
@Html.Partial("~/Views/Shared/_breadcrumb.cshtml")

<div class="container">
    <div class="card">
        <div class="card-body">
            <form id="editProfileForm" asp-controller="Profile" asp-action="Edit" method="post">
                <div id="uploadMessage" class="alert d-none" role="alert"></div>
                <input asp-for="Username" class="form-control" type="text" hidden />
                <input asp-for="Password" class="form-control" type="text" hidden />

                <div class="row">
                    <div class="col-lg-3">
                        <div class="flex-shrink-0">
                            <img src="@(string.IsNullOrEmpty(Model.Picture) ? "/assets/images/no-photo.png" : Model.Picture)"
                                 alt="User Picture"
                                 width="250px"
                                 height="250px"
                                 class="user-avtar rounded-circle"
                                 id="profilePicture"
                                 style="cursor:pointer; object-fit: cover;" />

                            <!-- Gizli dosya yükleme input'u -->
                            <input type="file" id="fileUpload" style="display:none;" accept="image/*" />
                        </div>
                    </div>
                    <div class="col-lg-3">
                        Adı Soyadı:  <input asp-for="NameSurname" class="form-control" type="text" />
                        <br />
                        Meslek:  <input asp-for="Job" class="form-control" type="text" />
                        <br />
                        Email:  <input asp-for="Email" class="form-control" type="text" />
                    </div>
                    <div class="col-lg-2">
                        Doğum Tarihi:  <input asp-for="Birthday" class="form-control" type="text" />
                        <br />
                        Telefon 1:  <input asp-for="MobilePhone1" class="form-control" type="text" />
                        <br />
                        Telefon 2:  <input asp-for="MobilePhone2" class="form-control" type="text" />
                    </div>
                    <div class="col-lg-2">
                        Ülke:  <input asp-for="Country" class="form-control" type="text" />
                        <br />
                        Şehir:  <input asp-for="City" class="form-control" type="text" />
                        <br />
                        İlçe:  <input asp-for="District" class="form-control" type="text" />
                    </div>
                    <div class="col-lg-2">
                        Ehliyet:  <input asp-for="DrivingLicense" class="form-control" type="text" />
                        <br />
                        Askerlik Durumu:  <input asp-for="Military" class="form-control" type="text" />
                        <br />
                        Evlilik Durumu:  <input asp-for="Marriage" class="form-control" type="text" />
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12">
                        Hakkında:
                        <textarea asp-for="About" class="form-control"></textarea>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-12" style="text-align: start; align-content:start; margin-top:20px;">
                        <button type="submit" class="btn btn-primary">Güncelle</button>
                    </div>
                </div>
                <br />
            </form>
            <div class="row mt-5" id="links">
                <h3>Bağlantılar</h3>
                @for (int i = 0; i < Model.Socials.Count; i += 6)
                {
                    <div class="row mb-4">
                        @for (int j = i; j < i + 6 && j < Model.Socials.Count; j++)
                        {
                            var link = Model.Socials[j];
                            <div class="col-lg-2 col-md-4 col-sm-6 mb-3">
                                <div class="card shadow-sm h-100 text-center position-relative"
                                     style="border: 2px solid #ccc; border-radius: 10px; display: flex; justify-content: center; align-items: center; position: relative;">

                                    <!-- Silme butonu -->
                                    <form asp-action="DeleteInformation"
                                          asp-controller="Profile"
                                          asp-route-Type="Social"
                                          asp-route-id="@link.Id"
                                          method="post"
                                          class="delete-form"
                                          data-form-id="@link.Id"
                                          style="position: absolute; top: 10px; right: 10px; z-index: 2;">
                                        <button type="button"
                                                class="btn btn-link p-0 border-0 delete-btn"
                                                data-form-id="@link.Id"
                                                style="color: red;">
                                            <i class="fa fa-trash"></i>
                                        </button>
                                    </form>

                                    <!-- Düzenleme Butonu -->
                                    <button type="button"
                                            class="btn btn-link p-0 border-0 edit-btn"
                                            onclick="updateTable('Social','@link.Id')"
                                            title="Düzenle"
                                            style="position: absolute; top: 10px; right: 35px; color: #007bff;">
                                        <i class="fa fa-edit"></i>
                                    </button>

                                    <!-- Sadece yazı tıklanabilir olacak şekilde -->
                                    <span style="font-size: 20px; z-index: 1;">
                                        <a href="@link.Link" target="_blank" style="text-decoration: none;">
                                            @link.Name
                                        </a>
                                    </span>

                                </div>
                            </div>

                        }
                    </div>
                }
            </div>
            <div class="row mt-5" id="skills">
                <h3>Teknik Beceriler</h3>
                @for (int i = 0; i < Model.Skills.Count; i += 2)
                {
                    <div class="row mb-4">
                        <div class="col-lg-6">
                            <div class="card shadow-sm h-100 position-relative" style="border: 2px solid #ccc; border-radius: 10px;">
                                <!-- Silme Butonu -->
                                <form asp-action="DeleteInformation"
                                      asp-controller="Profile"
                                      asp-route-Type="Skill"
                                      asp-route-id="@Model.Skills[i].Id"
                                      method="post"
                                      class="delete-form"
                                      data-form-id="@Model.Skills[i].Id"
                                      style="position: absolute; top: 10px; right: 10px;">
                                    <button type="button"
                                            class="btn btn-link p-0 border-0 delete-btn"
                                            data-form-id="@Model.Skills[i].Id"
                                            style="color: red;">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                </form>

                                <!-- Düzenleme Butonu -->
                                <button type="button"
                                        class="btn btn-link p-0 border-0 edit-btn"
                                        onclick="updateTable('Skill','@Model.Skills[i].Id')"
                                        title="Düzenle"
                                        style="position: absolute; top: 10px; right: 45px; color: #007bff;">
                                    <i class="fa fa-edit"></i>
                                </button>

                                <div class="card-body">
                                    <h5 class="card-title">@Model.Skills[i].Title</h5>
                                    <p class="card-text text-secondary">
                                        @Html.Raw(Model.Skills[i].Information)
                                    </p>
                                </div>
                            </div>
                        </div>
                        @if (i + 1 < Model.Skills.Count)
                        {
                            <div class="col-lg-6">
                                <div class="card shadow-sm h-100 position-relative" style="border: 2px solid #ccc; border-radius: 10px;">
                                    <!-- Silme Butonu -->
                                    <form asp-action="DeleteInformation"
                                          asp-controller="Profile"
                                          asp-route-Type="Skill"
                                          asp-route-id="@Model.Skills[i + 1].Id"
                                          method="post"
                                          class="delete-form"
                                          data-form-id="@Model.Skills[i + 1].Id"
                                          style="position: absolute; top: 10px; right: 10px;">
                                        <button type="button"
                                                class="btn btn-link p-0 border-0 delete-btn"
                                                data-form-id="@Model.Skills[i + 1].Id"
                                                style="color: red;">
                                            <i class="fa fa-trash"></i>
                                        </button>

                                        <!-- Düzenleme Butonu -->
                                        <button type="button"
                                                class="btn btn-link p-0 border-0 edit-btn"
                                                onclick="updateTable('Skill','@Model.Skills[i + 1].Id')"
                                                title="Düzenle"
                                                style="position: absolute;  right: 35px; color: #007bff;">
                                            <i class="fa fa-edit"></i>
                                        </button>
                                    </form>

                                    <div class="card-body">
                                        <h5 class="card-title">@Model.Skills[i + 1].Title</h5>
                                        <p class="card-text text-secondary">
                                            @Html.Raw(Model.Skills[i + 1].Information)
                                        </p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
            <div class="row mt-5" id="work">
                <h3>İş Tecrübeleri</h3>
                @foreach (var item in Model.WorkExperiences)
                {
                    <div class="card shadow-sm mb-4" style="border: 2px solid #ccc; border-radius: 10px; position: relative;">

                        <!-- Silme Butonu - Sağ üst köşeye konumlandırılmış -->
                        <form asp-action="DeleteInformation"
                              asp-controller="Profile"
                              asp-route-Type="Work"
                              asp-route-id="@item.Id"
                              method="post"
                              class="delete-form"
                              data-form-id="@item.Id"
                              style="position: absolute; top: 10px; right: 10px;">
                            <button type="button"
                                    class="btn btn-link p-0 border-0 delete-btn"
                                    data-form-id="@item.Id"
                                    style="color: red;">
                                <i class="fa fa-trash"></i>
                            </button>
                        </form>

                        <!-- Düzenleme Butonu -->
                        <button type="button"
                                class="btn btn-link p-0 border-0 edit-btn"
                                onclick="updateTable('Work','@item.Id')"
                                title="Düzenle"
                                style="position: absolute; top: 10px; right: 45px; color: #007bff;">
                            <i class="fa fa-edit"></i>
                        </button>

                        <div class="row g-0 p-4 align-items-center">
                            <!-- Sol blok: Tarih ve Başlık -->
                            <div class="col-lg-3 text-center border-end">
                                <div class="text-muted mb-2">
                                    <i class="fa fa-calendar"></i>
                                    @if (item.StartWhen != null && item.EndWhen != null)
                                    {
                                        <strong>@item.StartWhen.ToString("dd.MM.yyyy") - @item.EndWhen?.ToString("dd.MM.yyyy")</strong>
                                    }
                                    else
                                    {
                                        <strong>@item.StartWhen.ToString("dd.MM.yyyy") - DEVAM EDİYOR</strong>
                                    }
                                </div>
                                <div class="fw-semibold" style="font-size: 1.1rem;">
                                    @item.CompanyName
                                </div>
                            </div>

                            <!-- Sağ blok: Title ve açıklama -->
                            <div class="col-lg-9 ps-4">
                                <h4 class="mb-1">@item.Title</h4>
                                <strong class="text-secondary mb-0">@Html.Raw(item.Information)</strong>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="row mt-5" id="education">
                <h3>Eğitim Bilgileri</h3>

                @foreach (var item in Model.Educations)
                {
                    <div class="card shadow-sm mb-4" style="border: 2px solid #ccc; border-radius: 10px; position: relative;">

                        <!-- Silme Butonu - Sağ üst köşeye konumlandırılmış -->
                        <form asp-action="DeleteInformation"
                              asp-controller="Profile"
                              asp-route-Type="Education"
                              asp-route-id="@item.Id"
                              method="post"
                              class="delete-form"
                              data-form-id="@item.Id"
                              style="position: absolute; top: 10px; right: 10px;">
                            <button type="button"
                                    class="btn btn-link p-0 border-0 delete-btn"
                                    data-form-id="@item.Id"
                                    style="color: red;">
                                <i class="fa fa-trash"></i>
                            </button>
                        </form>

                        <!-- Düzenleme Butonu -->
                        <button type="button"
                                class="btn btn-link p-0 border-0 edit-btn"
                                onclick="updateTable('Education','@item.Id')"
                                title="Düzenle"
                                style="position: absolute; top: 10px; right: 45px; color: #007bff;">
                            <i class="fa fa-edit"></i>
                        </button>

                        <div class="row g-0 p-4 align-items-center">
                            <!-- Sol blok: Tarih ve Başlık -->
                            <div class="col-lg-3 text-center border-end">
                                <div class="text-muted mb-2">
                                    <i class="fa fa-calendar"></i>
                                    @if (item.StartWhen != null && item.EndWhen != null)
                                    {
                                        <strong>@item.StartWhen.ToString("dd.MM.yyyy") - @item.EndWhen?.ToString("dd.MM.yyyy")</strong>
                                    }
                                    else
                                    {
                                        <strong>@item.StartWhen.ToString("dd.MM.yyyy") - DEVAM EDİYOR</strong>
                                    }
                                </div>
                                <div class="fw-semibold" style="font-size: 1.1rem;">
                                    @item.Title
                                </div>
                            </div>

                            <!-- Sağ blok: Okul adı ve açıklama -->
                            <div class="col-lg-9 ps-4">
                                <h4 class="mb-1">@item.Name</h4>
                                @if (!string.IsNullOrEmpty(item.Information) && item.GradePoint != null)
                                {
                                    <strong class="text-secondary mb-0">@item.Information - @item.GradePoint</strong>
                                }
                                else if (!string.IsNullOrEmpty(item.Information) && item.GradePoint == null)
                                {
                                    <strong class="text-secondary mb-0">@item.Information</strong>
                                }
                                else if (string.IsNullOrEmpty(item.Information) && item.GradePoint != null)
                                {
                                    <strong class="text-secondary mb-0">(@item.GradePoint)</strong>
                                }
                                else
                                {

                                }
                            </div>
                        </div>
                    </div>
                }
            </div>
            <div class="row mt-5" id="references">
                <h3>Referanslar</h3>
                @for (int i = 0; i < Model.References.Count; i += 4)
                {
                    <div class="row mb-4">
                        @for (int j = i; j < i + 4 && j < Model.References.Count; j++)
                        {
                            var reference = Model.References[j];
                            <div class="col-lg-3 col-md-4 col-sm-6 mb-3">
                                <div class="card shadow-sm  position-relative" style="border: 2px solid #ccc; border-radius: 10px;">

                                    <!-- Silme Butonu -->
                                    <form asp-action="DeleteInformation"
                                          asp-controller="Profile"
                                          asp-route-Type="Reference"
                                          asp-route-id="@reference.Id"
                                          method="post"
                                          class="delete-form"
                                          data-form-id="@reference.Id"
                                          style="position: absolute; top: 10px; right: 10px;">
                                        <button type="submit"
                                                class="btn btn-link p-0 border-0"
                                                style="color: red;">
                                            <i class="fa fa-trash"></i>
                                        </button>
                                    </form>

                                    <!-- Düzenleme Butonu -->
                                    <button type="button"
                                            class="btn btn-link p-0 border-0 edit-btn"
                                            onclick="updateTable('Reference','@reference.Id')"
                                            title="Düzenle"
                                            style="position: absolute; top: 10px; right: 45px; color: #007bff;">
                                        <i class="fa fa-edit"></i>
                                    </button>

                                    <div class="card-body p-3">
                                        <div class="mb-2">@reference.Title</div>
                                        <h6 class="fw-bold mb-1">@reference.Name</h6>
                                        <div class="text-muted mb-1">@reference.CompanyName</div>
                                        @if (!string.IsNullOrEmpty(reference.Email))
                                        {
                                            <div>
                                                <i class="fa fa-envelope me-1"></i>
                                                <a href="mailto:@reference.Email">@reference.Email</a>
                                            </div>
                                        }
                                        @if (!string.IsNullOrEmpty(reference.MobilePhone))
                                        {
                                            <div>
                                                <i class="fa fa-phone me-1"></i>
                                                @reference.MobilePhone
                                            </div>
                                        }
                                        @if (!string.IsNullOrEmpty(reference.Information))
                                        {
                                            <div class="mt-2">
                                                <p class="mb-0 text-secondary">@Html.Raw(reference.Information)</p>
                                            </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
            <div class="row mt-5" id="languages">
                <h3>Diller</h3>
                @for (int i = 0; i < Model.Languages.Count; i += 4)
                {
                    <div class="row mb-4">
                        @for (int j = i; j < i + 4 && j < Model.Languages.Count; j++)
                        {
                            var lang = Model.Languages[j];
                            <div class="col-lg-3 col-md-6 col-sm-12 mb-3">
                                <div class="card shadow-sm text-center position-relative" style="border: 2px solid #ccc; border-radius: 10px;">

                                    <!-- Silme Butonu -->
                                    <form asp-action="DeleteInformation"
                                          asp-controller="Profile"
                                          asp-route-Type="Language"
                                          asp-route-id="@lang.Id"
                                          method="post"
                                          class="delete-form"
                                          data-form-id="@lang.Id"
                                          style="position: absolute; top: 10px; right: 10px;">
                                        <button type="button"
                                                class="btn btn-link p-0 border-0 delete-btn"
                                                style="color: red;">
                                            <i class="fa fa-trash"></i>
                                        </button>
                                    </form>

                                    <!-- Düzenleme Butonu -->
                                    <button type="button"
                                            class="btn btn-link p-0 border-0 edit-btn"
                                            onclick="updateTable('Language','@lang.Id')"
                                            title="Düzenle"
                                            style="position: absolute; top: 10px; right: 45px; color: #007bff;">
                                        <i class="fa fa-edit"></i>
                                    </button>

                                    <div class="card-body py-4">
                                        <h5 class="card-title mb-0">
                                            <span class="text-muted">@lang.Name</span>

                                            @if (!string.IsNullOrWhiteSpace(lang.Information))
                                            {
                                                <span class="text-muted">(@lang.Information)</span>
                                            }
                                        </h5>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
            <div class="row mt-5" id="certificates">
                <h3>Sertifikalar</h3>
                @for (int i = 0; i < Model.Certificates.Count; i += 2)
                {
                    <div class="row mb-4">
                        @for (int j = i; j < i + 2 && j < Model.Certificates.Count; j++)
                        {
                            var cert = Model.Certificates[j];
                            <div class="col-lg-6 col-md-12 mb-3">
                                <div class="card shadow-sm h-100 position-relative" style="border: 2px solid #ccc; border-radius: 10px;">

                                    <!-- Silme Butonu -->
                                    <form asp-action="DeleteInformation"
                                          asp-controller="Profile"
                                          asp-route-Type="Certificate"
                                          asp-route-id="@cert.Id"
                                          method="post"
                                          class="delete-form"
                                          data-form-id="@cert.Id"
                                          style="position: absolute; top: 10px; right: 10px;">
                                        <button type="button"
                                                class="btn btn-link p-0 border-0 delete-btn"
                                                style="color: red;">
                                            <i class="fa fa-trash"></i>
                                        </button>
                                    </form>

                                    <!-- Düzenleme Butonu -->
                                    <button type="button"
                                            class="btn btn-link p-0 border-0 edit-btn"
                                            onclick="updateTable('Certificate','@cert.Id')"
                                            title="Düzenle"
                                            style="position: absolute; top: 10px; right: 45px; color: #007bff;">
                                        <i class="fa fa-edit"></i>
                                    </button>

                                    <div class="card-body p-4">
                                        <div class="d-flex justify-content-between align-items-center mb-2">
                                            <h5 class="mb-0 fw-bold">@cert.CompanyName</h5>
                                            <small class="text-muted m-2">
                                                <i class="fa fa-calendar"></i>
                                                @if (cert.StartWhen != null && cert.EndWhen != null)
                                                {
                                                    <strong>@cert.StartWhen.ToString("dd.MM.yyyy") - @cert.EndWhen?.ToString("dd.MM.yyyy")</strong>
                                                }
                                                else
                                                {
                                                    <strong>@cert.StartWhen.ToString("dd.MM.yyyy")</strong>
                                                }
                                            </small>
                                        </div>
                                        <p class="mb-0 text-secondary">@cert.Information</p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            </div>
            <div class="row mt-5" id="projects">
                <h3>Projeler</h3>
                @foreach (var project in Model.Projects)
                {
                    <div class="row mb-4">
                        <div class="col-12">
                            <div class="card shadow-sm h-100 position-relative" style="border: 2px solid #ccc; border-radius: 10px;">

                                <!-- Silme Butonu -->
                                <form asp-action="DeleteInformation"
                                      asp-controller="Profile"
                                      asp-route-Type="Project"
                                      asp-route-id="@project.Id"
                                      method="post"
                                      class="delete-form"
                                      data-form-id="@project.Id"
                                      style="position: absolute; top: 10px; right: 10px;">
                                    <button type="button"
                                            class="btn btn-link p-0 border-0 delete-btn"
                                            style="color: red;">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                </form>

                                <!-- Düzenleme Butonu -->
                                <button type="button"
                                        class="btn btn-link p-0 border-0 edit-btn"
                                        onclick="updateTable('Project','@project.Id')"
                                        title="Düzenle"
                                        style="position: absolute; top: 10px; right: 45px; color: #007bff;">
                                    <i class="fa fa-edit"></i>
                                </button>

                                <div class="card-body p-4">
                                    <div class="d-flex justify-content-between align-items-center mb-2">
                                        <h5 class="fw-bold mb-0">@project.Name</h5>

                                        @if (project.StartWhen != null && project.EndWhen != null)
                                        {
                                            <small class="text-muted m-2">
                                                <i class="fa fa-calendar"></i>
                                                <strong>@project.StartWhen?.ToString("dd.MM.yyyy") - @project.EndWhen?.ToString("dd.MM.yyyy")</strong>
                                            </small>
                                        }
                                        else if (project.StartWhen != null && project.EndWhen == null)
                                        {
                                            <small class="text-muted m-2">
                                                <i class="fa fa-calendar"></i>
                                                <strong>@project.StartWhen?.ToString("dd.MM.yyyy") - DEVAM EDİYOR</strong>
                                            </small>
                                        }
                                        else
                                        {

                                        }

                                    </div>
                                    @if (!string.IsNullOrWhiteSpace(project.Information))
                                    {
                                        <p class="text-secondary mb-0">@Html.Raw(project.Information)</p>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>

            <br />
            <br />
            <br />
            <hr />

            <div class="card-body pc-component align-self-center" id="buttons-container">
                <div class="d-flex justify-content-between align-items-center flex-wrap" style="justify-self: center">
                    <div class="btn-group btn-group-responsive d-flex flex-wrap" role="group">
                        <button type="button" class="btn btn-outline-secondary mb-2 me-1" data-table="addEducation">Eğitim Bilgisi Ekle</button>
                        <button type="button" class="btn btn-outline-secondary mb-2 me-1" data-table="addWork">Çalışma Bilgisi Ekle</button>
                        <button type="button" class="btn btn-outline-secondary mb-2 me-1" data-table="addSkill">Teknik Beceri Ekle</button>
                        <button type="button" class="btn btn-outline-secondary mb-2 me-1" data-table="addSocial">Sosyal Ağ Ekle</button>
                        <button type="button" class="btn btn-outline-secondary mb-2 me-1" data-table="addReference">Referans Ekle</button>
                        <button type="button" class="btn btn-outline-secondary mb-2 me-1" data-table="addLanguage">Dil Ekle</button>
                        <button type="button" class="btn btn-outline-secondary mb-2 me-1" data-table="addCertificate">Sertifika Ekle</button>
                        <button type="button" class="btn btn-outline-secondary mb-2 me-1" data-table="addProject">Proje Ekle</button>
                    </div>
                </div>
            </div>

            <form id="csrf-form">@Html.AntiForgeryToken()</form>

            <div id="addEducation">
                <div class="container mt-4">
                    <h4>Eğitim Bilgisi Ekle</h4>
                    <div class="row mt-5">
                        <div class="col-lg-2" style="display:none">
                            <label for="educationId">ID</label>
                            <input type="text" id="educationId" class="form-control" />
                        </div>
                        <div class="col-lg-2">
                            <label for="educationTitle">Eğitim Derecesi</label>
                            <input type="text" id="educationTitle" class="form-control" />
                        </div>
                        <div class="col-lg-4">
                            <label for="educationName">Okul Adı</label>
                            <input type="text" id="educationName" class="form-control" />
                        </div>
                        <div class="col-lg-2">
                            <label for="educationGradePoint">Diploma Notu / Azami Not</label>
                            <input type="text" id="educationGradePoint" class="form-control" />
                        </div>
                        <div class="col-lg-2">
                            <label for="educationStartWhen">Başlangıç Tarihi</label>
                            <input type="date" id="educationStartWhen" class="form-control" />
                        </div>
                        <div class="col-lg-2">
                            <label for="educationEndWhen">Bitiş Tarihi</label>
                            <input type="date" id="educationEndWhen" class="form-control" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <label for="educationInformation">Açıklama</label>
                            <input type="text" id="educationInformation" class="form-control" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-6" style="text-align: start; align-content:start; margin-top:20px;">
                            <button type="button" class="btn btn-primary" onclick="AddInformation('Education')">Ekle</button>
                        </div>
                        <div class="col-lg-6" style="text-align: end; align-content:start; margin-top:20px;">
                            <button type="button" class="btn btn-primary" onclick="AddInformation('Education',1)">Düzenlemeyi Kaydet</button>
                        </div>
                    </div>
                    <br />
                    <h5>Eklenen Eğitimler</h5>
                    <div class="table-wrapper mb-2">
                        <div class="table-responsive">
                            <table class="table" id="educationTable">
                                <thead>
                                    <tr>
                                        <th>Okul</th>
                                        <th>Derece</th>
                                        <th>Başlangıç</th>
                                        <th>Bitiş</th>
                                        <th>Not</th>
                                        <th>Açıklama</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                    <button type="button" class="btn btn-primary" onclick="SaveInformation('Education')">Kaydet</button>
                </div>
                <br />
                <hr />
                <br />
            </div>
            <div id="addWork">
                <div class="container mt-4">
                    <h4>Çalışma Bilgisi Ekle</h4>
                    <div class="row mt-5">
                        <div class="col-lg-2" style="display:none">
                            <label for="workId">ID</label>
                            <input type="text" id="workId" class="form-control" />
                        </div>
                        <div class="col-lg-4">
                            <label for="workCompany">Şirket Adı</label>
                            <input type="text" id="workCompany" class="form-control" />
                        </div>
                        <div class="col-lg-4">
                            <label for="workPosition">Pozisyon</label>
                            <input type="text" id="workPosition" class="form-control" />
                        </div>
                        <div class="col-lg-2">
                            <label for="workStartWhen">Başlangıç Tarihi</label>
                            <input type="date" id="workStartWhen" class="form-control" />
                        </div>
                        <div class="col-lg-2">
                            <label for="workEndWhen">Bitiş Tarihi</label>
                            <input type="date" id="workEndWhen" class="form-control" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <label for="workInformation">Açıklama</label>
                            <textarea id="workInformation" class="form-control"></textarea>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12" style="text-align: start; align-content:start; margin-top:20px;">
                            <button type="button" class="btn btn-primary" onclick="AddInformation('Work')">Ekle</button>
                        </div>
                    </div>
                    <br />
                    <h5>Eklenen Çalışma Bilgileri</h5>
                    <div class="table-wrapper mb-2">
                        <div class="table-responsive">
                            <table class="table" id="workTable">
                                <thead>
                                    <tr>
                                        <th>Şirket Adı</th>
                                        <th>Pozisyon</th>
                                        <th>Başlangıç</th>
                                        <th>Bitiş</th>
                                        <th>Açıklama</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                    <button type="button" class="btn btn-primary" onclick="SaveInformation('Work')">Kaydet</button>
                </div>
                <br />
                <hr />
                <br />
            </div>
            <div id="addSkill">
                <div class="container mt-4">
                    <h4>Teknik Beceri Ekle</h4>
                    <div class="row mt-5">
                        <div class="col-lg-6" style="display:none">
                            <label for="skillId">ID</label>
                            <input type="text" id="skillId" class="form-control" />
                        </div>
                        <div class="col-lg-6">
                            <label for="skillName">Beceri Adı</label>
                            <input type="text" id="skillName" class="form-control" />
                        </div>
                        <div class="col-lg-2">
                            <label for="skillOrder">Beceri Sırası</label>
                            <input type="number" id="skillOrder" class="form-control" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <label for="skillInfo">Açıklama</label>
                            <textarea id="skillInfo" class="form-control"></textarea>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12" style="text-align: start; align-content:start; margin-top:20px;">
                            <button type="button" class="btn btn-primary" onclick="AddInformation('Skill')">Ekle</button>
                        </div>
                    </div>
                    <br />
                    <h5>Eklenen Teknik Beceriler</h5>
                    <div class="table-wrapper mb-2">
                        <div class="table-responsive">
                            <table class="table" id="skillTable">
                                <thead>
                                    <tr>
                                        <th>Beceri Adı</th>
                                        <th>Beceri Sırası</th>
                                        <th>Açıklama</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                    <button type="button" class="btn btn-primary" onclick="SaveInformation('Skill')">Kaydet</button>
                </div>
                <br />
                <hr />
                <br />
            </div>
            <div id="addSocial">
                <div class="container mt-4">
                    <h4>Sosyal Ağ Ekle</h4>
                    <div class="row mt-5">
                        <div class="col-lg-4" style="display:none">
                            <label for="socialId">ID</label>
                            <input type="text" id="socialId" class="form-control" />
                        </div>
                        <div class="col-lg-4">
                            <label for="socialName">Açıklama</label>
                            <input type="text" id="socialName" class="form-control" />
                        </div>
                        <div class="col-lg-2">
                            <label for="socialOrder">Sosyal Ağ Sırası</label>
                            <input type="number" id="socialOrder" class="form-control" />
                        </div>
                        <div class="col-lg-6">
                            <label for="socialLink">Link</label>
                            <input type="text" id="socialLink" class="form-control" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12" style="text-align: start; align-content:start; margin-top:20px;">
                            <button type="button" class="btn btn-primary" onclick="AddInformation('Social')">Ekle</button>
                        </div>
                    </div>
                    <br />
                    <h5>Eklenen Sosyal Ağlar</h5>
                    <div class="table-wrapper mb-2">
                        <div class="table-responsive">
                            <table class="table" id="socialTable">
                                <thead>
                                    <tr>
                                        <th>Açıklama</th>
                                        <th>Link</th>
                                        <th>Sosyal Ağ Sırası</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                    <button type="button" class="btn btn-primary" onclick="SaveInformation('Social')">Kaydet</button>
                </div>
                <br />
                <hr />
                <br />
            </div>
            <div id="addReference">
                <div class="container mt-4">
                    <h4>Referans Ekle</h4>
                    <div class="row mt-5">
                        <div class="col-lg-6" style="display:none">
                            <label for="referenceId">ID</label>
                            <input type="text" id="referenceId" class="form-control" />
                        </div>
                        <div class="col-lg-5">
                            <label for="referenceCompany">Şirket Adı</label>
                            <input type="text" id="referenceCompany" class="form-control" />
                        </div>
                        <div class="col-lg-5">
                            <label for="referenceTitle">Pozisyon</label>
                            <input type="text" id="referenceTitle" class="form-control" />
                        </div>
                        <div class="col-lg-2">
                            <label for="referenceOrder">Referans Sırası</label>
                            <input type="number" id="referenceOrder" class="form-control" />
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-lg-4">
                            <label for="referenceName">İsim</label>
                            <input type="text" id="referenceName" class="form-control" />
                        </div>
                        <div class="col-lg-4">
                            <label for="referenceMail">E-Mail</label>
                            <input type="text" id="referenceMail" class="form-control" />
                        </div>
                        <div class="col-lg-4">
                            <label for="referencePhone">Telefon</label>
                            <input type="text" id="referencePhone" class="form-control" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <label for="referenceInformation">Açıklama</label>
                            <textarea id="referenceInformation" class="form-control"></textarea>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12" style="text-align: start; align-content:start; margin-top:20px;">
                            <button type="button" class="btn btn-primary" onclick="AddInformation('Reference')">Ekle</button>
                        </div>
                    </div>
                    <br />
                    <h5>Eklenen Referanslar</h5>
                    <div class="table-wrapper mb-2">
                        <div class="table-responsive">
                            <table class="table" id="referenceTable">
                                <thead>
                                    <tr>
                                        <th>Şirket Adı</th>
                                        <th>İsim</th>
                                        <th>Pozisyon</th>
                                        <th>Açıklama</th>
                                        <th>Mail</th>
                                        <th>Telefon</th>
                                        <th>Referans Sırası</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                    <button type="button" class="btn btn-primary" onclick="SaveInformation('Reference')">Kaydet</button>
                </div>
                <br />
                <hr />
                <br />
            </div>
            <div id="addLanguage">
                <div class="container mt-4">
                    <h4>Dil Ekle</h4>
                    <div class="row mt-5">
                        <div class="col-lg-4" style="display:none">
                            <label for="languageId">ID</label>
                            <input type="text" id="languageId" class="form-control" />
                        </div>
                        <div class="col-lg-3">
                            <label for="languageName">Dil</label>
                            <input type="text" id="languageName" class="form-control" />
                        </div>
                        <div class="col-lg-2">
                            <label for="languageOrder">Dil Sırası</label>
                            <input type="number" id="languageOrder" class="form-control" />
                        </div>
                        <div class="col-lg-7">
                            <label for="languageInfo">Açıklama</label>
                            <input type="text" id="languageInfo" class="form-control" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12" style="text-align: start; align-content:start; margin-top:20px;">
                            <button type="button" class="btn btn-primary" onclick="AddInformation('Language')">Ekle</button>
                        </div>
                    </div>
                    <br />
                    <h5>Eklenen Diller</h5>
                    <div class="table-wrapper mb-2">
                        <div class="table-responsive">
                            <table class="table" id="languageTable">
                                <thead>
                                    <tr>
                                        <th>Dil</th>
                                        <th>Dil Sırası</th>
                                        <th>Açıklama</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                    <button type="button" class="btn btn-primary" onclick="SaveInformation('Language')">Kaydet</button>
                </div>
                <br />
                <hr />
                <br />
            </div>
            <div id="addCertificate">
                <div class="container mt-4">
                    <h4>Sertifika Ekle</h4>
                    <div class="row mt-5">
                        <div class="col-lg-2" style="display:none">
                            <label for="certificateId">ID</label>
                            <input type="text" id="certificateId" class="form-control" />
                        </div>
                        <div class="col-lg-3">
                            <label for="certificateName">Sertifika Adı</label>
                            <input type="text" id="certificateName" class="form-control" />
                        </div>
                        <div class="col-lg-5">
                            <label for="certificateInformation">Açıklama</label>
                            <input type="text" id="certificateInformation" class="form-control" />
                        </div>
                        <div class="col-lg-2">
                            <label for="certificateStartWhen">Başlangıç Tarihi</label>
                            <input type="date" id="certificateStartWhen" class="form-control" />
                        </div>
                        <div class="col-lg-2">
                            <label for="certificateEndWhen">Bitiş Tarihi</label>
                            <input type="date" id="certificateEndWhen" class="form-control" />
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12" style="text-align: start; align-content:start; margin-top:20px;">
                            <button type="button" class="btn btn-primary" onclick="AddInformation('Certificate')">Ekle</button>
                        </div>
                    </div>
                    <br />
                    <h5>Eklenen Sertifika Bilgileri</h5>
                    <div class="table-wrapper mb-2">
                        <div class="table-responsive">
                            <table class="table" id="certificateTable">
                                <thead>
                                    <tr>
                                        <th>Sertifika Adı</th>
                                        <th>Açıklama</th>
                                        <th>Başlangıç</th>
                                        <th>Bitiş</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                    <button type="button" class="btn btn-primary" onclick="SaveInformation('Certificate')">Kaydet</button>
                </div>
                <br />
                <hr />
                <br />
            </div>
            <div id="addProject">
                <div class="container mt-4">
                    <h4>Proje Ekle</h4>
                    <div class="row mt-5">
                        <div class="col-lg-2" style="display:none">
                            <label for="projectId">ID</label>
                            <input type="text" id="projectId" class="form-control" />
                        </div>
                        <div class="col-lg-6">
                            <label for="projectName">Proje Adı</label>
                            <input type="text" id="projectName" class="form-control" />
                        </div>
                        <div class="col-lg-2">
                            <label for="projectStart">Başlangıç Tarihi</label>
                            <input type="date" id="projectStart" class="form-control" />
                        </div>
                        <div class="col-lg-2">
                            <label for="projectEnd">Bitiş Tarihi</label>
                            <input type="date" id="projectEnd" class="form-control" />
                        </div>
                        <div class="col-lg-2">
                            <label for="projectOrder">Proje Sırası</label>
                            <input type="number" id="projectOrder" class="form-control" />
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-lg-12">
                            <label for="projectInfo">Açıklama</label>
                            <textarea id="projectInfo" class="form-control"></textarea>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-lg-12" style="text-align: start; align-content:start; margin-top:20px;">
                            <button type="button" class="btn btn-primary" onclick="AddInformation('Project')">Ekle</button>
                        </div>
                    </div>
                    <br />
                    <h5>Eklenen Projeler</h5>
                    <div class="table-wrapper mb-2">
                        <div class="table-responsive">
                            <table class="table" id="projectTable">
                                <thead>
                                    <tr>
                                        <th>Proje Adı</th>
                                        <th>Başlangıç</th>
                                        <th>Bitiş</th>
                                        <th>Proje Sırası</th>
                                        <th>Açıklama</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                            </table>
                        </div>
                    </div>
                    <button type="button" class="btn btn-primary" onclick="SaveInformation('Project')">Kaydet</button>
                </div>
                <br />
                <hr />
                <br />
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteConfirmModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Silme Onayı</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Kapat"></button>
            </div>
            <div class="modal-body">Bu kaydı silmek istediğinize emin misiniz?</div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">İptal</button>
                <button type="button" class="btn btn-danger" id="confirmDeleteBtn">Sil</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/tinymce@6/tinymce.min.js"></script>


    <script>
        tinymce.init({
            selector: '#skillInfo,#workInformation,#projectInfo,#referenceInformation',
            menubar: false,
            plugins: 'link lists code',
            toolbar: 'undo redo | bold italic underline | bullist numlist | link | code',
            height: 300
        });
    </script>


    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const buttons = document.querySelectorAll("[data-table]");
            const sections = document.querySelectorAll("#addEducation, #addWork, #addSkill, #addSocial, #addReference, #addLanguage, #addCertificate, #addProject");

            // İlk başta hepsini gizle
            sections.forEach(section => section.style.display = "none");

            buttons.forEach(button => {
                button.addEventListener("click", function () {
                    const targetId = this.getAttribute("data-table");

                    // Hepsini gizle
                    sections.forEach(section => section.style.display = "none");

                    // Sadece ilgili bölümü göster
                    const targetSection = document.getElementById(targetId);
                    if (targetSection) {
                        targetSection.style.display = "block";
                    }
                });
            });
        });
    </script>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const profilePicture = document.getElementById("profilePicture");
            const fileUpload = document.getElementById("fileUpload");

            // Profil fotoğrafı tıklanırsa dosya inputu açılsın
            profilePicture.addEventListener("click", () => {
                fileUpload.click();
            });

            // Dosya seçildiğinde upload işlemi başlasın
            fileUpload.addEventListener("change", async function () {
                if (fileUpload.files.length > 0) {
                    const formData = new FormData();
                    formData.append("formFile", fileUpload.files[0]);
                    formData.append("UserID", "@Model.Id");

                    try {
                        const response = await fetch("/Profile/PictureUpload", {
                            method: "POST",
                            body: formData
                        });

                        if (response.ok) {
                            const newFileName = await response.text();
                            profilePicture.src = `/Profiles/@Model.Id/Images/${newFileName}`;
                            showAlertModal("Kullanıcı görseli başarılı bir şekilde yüklendi.", "Başarılı", "success");
                        } else {
                            showAlertModal("Yükleme başarısız.", "Hata", "danger");
                        }
                    } catch (e) {
                        console.error("Upload hatası:", e);
                        showAlertModal("Yükleme sırasında bir hata oluştu.", "Hata", "danger");
                    }
                }
            });

            // Form silme butonları için dinleyici
            document.querySelectorAll('.delete-btn').forEach(btn => {
                btn.addEventListener('click', function () {
                    const formId = this.getAttribute('data-form-id');
                    formToDelete = document.querySelector(`form[data-form-id='${formId}']`);
                    deleteIndex = null;
                    const modal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
                    modal.show();
                });
            });
        });

        // Alert modalı gösterme fonksiyonu
        function showAlertModal(message, title, type = "danger") {
            document.getElementById('generalAlertModalTitle').textContent = title;
            document.getElementById('generalAlertModalBody').innerHTML = `<div class="alert alert-${type} m-0">${message}</div>`;
            const modal = new bootstrap.Modal(document.getElementById('generalAlertModal'));
            modal.show();
        }

        // Silme işlemi için modal göster
        function deleteInformation(e,index,type) {
            e.preventDefault();
            deleteIndex = index;
            deleteType = type;
            formToDelete = null;
            const modal = new bootstrap.Modal(document.getElementById('deleteConfirmModal'));
            modal.show();
        }

        // Global değişkenler
        let educationList = [];
        let workList = [];
        let skillList = [];
        let referenceList = [];
        let languageList = [];
        let socialList = [];
        let projectList = [];
        let certificateList = [];

        let formToDelete = null;
        let deleteIndex = null;
        let deleteType = null;

        // Ekleme
        function AddInformation(type, isEdit = null) {
            if(type === "Education"){
                const id = $("#educationId").val() || 0;
                const title = $("#educationTitle").val();
                const name = $("#educationName").val();
                const grade = $("#educationGradePoint").val();
                const info = $("#educationInformation").val();
                const start = $("#educationStartWhen").val();
                const end = $("#educationEndWhen").val();

                if (!title || !name || !start) {
                    showAlertModal("Derece, Okul Adı ve Başlangıç Tarihi zorunludur.","Uyarı");
                    return;
                }

                const education = {
                    Id: id,
                    Title: title,
                    Name: name,
                    GradePoint: grade,
                    Information: info,
                    StartWhen: start,
                    EndWhen: end
                };

                educationList.push(education);

            }
            else if(type === "Work"){
                const id = $("#workId").val() || 0;
                const company = $("#workCompany").val();
                const title = $("#workPosition").val();
                const info = tinymce.get("workInformation").getContent();
                const start = $("#workStartWhen").val();
                const end = $("#workEndWhen").val();

                if (!company || !title || !start) {
                    showAlertModal("Şirket Adı, Pozisyon ve Başlangıç Tarihi zorunludur.","Uyarı");
                    return;
                }

                const work = {
                    Id: id,
                    Position: title,
                    Company: company,
                    Information: info,
                    StartWhen: start,
                    EndWhen: end
                };

                workList.push(work);
            }
            else if(type === "Skill"){
                const id = $("#skillId").val() || 0;
                const title = $("#skillName").val();
                const order = $("#skillOrder").val();
                const info = tinymce.get("skillInfo").getContent();


                if (!title) {
                    showAlertModal("Beceri Adı zorunludur.","Uyarı");
                    return;
                }

                const skill = {
                    Id: id,
                    Title: title,
                    Information: info,
                    Order: order
                };

                skillList.push(skill);
            }
            else if (type == "Social")
            {
                const id = $("#socialId").val() || 0;
                const name = $("#socialName").val();
                const link = $("#socialLink").val();
                const order = $("#socialOrder").val();

                if (!name || !link ) {
                    showAlertModal("Sosyal Ağ Adı ve Link zorunludur.","Uyarı");
                    return;
                }

                const social = {
                    Id: id,
                    Name: name,
                    Link: link,
                    Order: order
                };

                socialList.push(social);
            }
            else if (type == "Reference")
            {
                const id = $("#referenceId").val() || 0;
                const company = $("#referenceCompany").val();
                const name = $("#referenceName").val();
                const title = $("#referenceTitle").val();
                const info = tinymce.get("referenceInformation").getContent();
                const mail = $("#referenceMail").val();
                const phone = $("#referencePhone").val();
                const order = $("#referenceOrder").val();

                if (!name) {
                    showAlertModal("İsim zorunludur.","Uyarı");
                    return;
                }

                const reference = {
                    Id: id,
                    Company: company,
                    Name: name,
                    Title: title,
                    Info: info,
                    Mail: mail,
                    Phone: phone,
                    Order: order
                };

                referenceList.push(reference);
            }
            else if (type == "Language")
            {
                const id = $("#languageId").val() || 0;
                const name = $("#languageName").val();
                const info = $("#languageInfo").val();
                const order = $("#languageOrder").val();

                if (!name) {
                    showAlertModal("Dil zorunludur.","Uyarı");
                    return;
                }

                const language = {
                    Id: id,
                    Name: name,
                    Info: info,
                    Order: order
                };

                languageList.push(language);
            }
            else if (type == "Certificate")
            {
                const id = $("#certificateId").val() || 0;
                const company = $("#certificateName").val();
                const info = $("#certificateInformation").val();
                const start = $("#certificateStartWhen").val();
                const end = $("#certificateEndWhen").val();

                if (!company || !info || !start) {
                    showAlertModal("İsim, Açıklama ve Başlangıç Tarihi zorunludur.","Uyarı");
                    return;
                }

                const certificate = {
                    Id: id,
                    Company: company,
                    Info: info,
                    StartWhen: start,
                    EndWhen: end
                };

                certificateList.push(certificate);
            }
            else if (type == "Project")
            {
                const id = $("#projectId").val() || 0;
                const name = $("#projectName").val();
                const info = tinymce.get("projectInfo").getContent();
                const start = $("#projectStart").val();
                const end = $("#projectEnd").val();
                const order = $("#projectOrder").val();

                if (!name) {
                    showAlertModal("Proje Adı zorunludur.","Uyarı");
                    return;
                }

                const project = {
                    Id: id,
                    Name: name,
                    Info: info,
                    StartWhen: start,
                    EndWhen: end,
                    Order: order
                };

                projectList.push(project);
            }
            else{

            }

            if(isEdit)
            {
                SaveInformation(type);
            }
            else
            {
                updateTable(type);
                clearForm(type);
            }
        }

        // Form alanlarını temizle
        function clearForm(type) {
            if(type === "Education"){
                $("#educationId").val('');
                $("#educationTitle").val('');
                $("#educationName").val('');
                $("#educationGradePoint").val('');
                $("#educationInformation").val('');
                $("#educationStartWhen").val('');
                $("#educationEndWhen").val('');

            }
            else if(type === "Work"){
                $("#workId").val('');
                $("#workCompany").val('');
                $("#workPosition").val('');
                $("#workStartWhen").val('');
                $("#workEndWhen").val('');
                tinymce.get("workInformation").setContent('');

            }
            else if(type === "Skill"){
                $("#skillId").val('');
                $("#skillName").val('');
                $("#skillOrder").val('');
                tinymce.get("skillInfo").setContent('');

            }
             else if (type == "Social")
            {
                $("#socialId").val('');
                $("#socialName").val('');
                $("#socialLink").val('');
                $("#socialOrder").val('');
            }
            else if (type == "Reference")
            {
                $("#referenceId").val('');
                $("#referenceCompany").val('');
                $("#referenceName").val('');
                $("#referenceTitle").val('');
                $("#referencePhone").val('');
                $("#referenceMail").val('');
                $("#referenceOrder").val('');
                tinymce.get("referenceInformation").setContent('');

            }
            else if (type == "Language")
            {
                $("#languageId").val('');
                $("#languageName").val('');
                $("#languageInfo").val('');
                $("#languageOrder").val('');
            }
            else if (type == "Certificate")
            {
                $("#certificateId").val('');
                $("#certificateName").val('');
                $("#certificateInformation").val('');
                $("#certificateStartWhen").val('');
                $("#certificateEndWhen").val('');
            }
            else if (type == "Project")
            {
                $("#projectId").val('');
                $("#projectName").val('');
                $("#projectStart").val('');
                $("#projectEnd").val('');
                $("#projectOrder").val('');
                tinymce.get("projectInfo").setContent('');

            }
            else
            {

            }
        }

        // Listesini tabloya yazdır
        function updateTable(type , index = null) {
            if(type === "Education"){
                if(index !== null){
                      const loadedData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Educations));
                      const idx = typeof index === "string" ? parseInt(index, 10) : index;
                      const data = loadedData.find(a => a.Id === idx);
                      if(data){
                        document.getElementById('educationId').value = data.Id || '';
                        document.getElementById('educationTitle').value = data.Title || '';
                        document.getElementById('educationName').value = data.Name || '';
                        document.getElementById('educationGradePoint').value = data.GradePoint || '';
                        document.getElementById('educationStartWhen').value = data.StartWhen ? data.StartWhen.substring(0,10) : '';
                        document.getElementById('educationEndWhen').value = data.EndWhen ? data.EndWhen.substring(0,10) : '';
                        document.getElementById('educationInformation').value = data.Information || '';
                      }
                }
                let html = '';
                educationList.forEach((edu, index) => {
                html += `<tr>
                    <td>${edu.Name || ''}</td>
                    <td>${edu.Title || ''}</td>
                    <td>${edu.StartWhen || ''}</td>
                    <td>${edu.EndWhen || ''}</td>
                    <td>${edu.GradePoint || ''}</td>
                    <td>${edu.Information || ''}</td>
                    <td><button class="btn btn-sm btn-danger" onclick="deleteInformation(event,${index},'Education')">Sil</button></td>
                </tr>`;
                });
                $("#educationTable tbody").html(html);
            }
            else if(type === "Work"){
                  if(index !== null){
                      const loadedData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.WorkExperiences));
                      const idx = typeof index === "string" ? parseInt(index, 10) : index;
                      const data = loadedData.find(a => a.Id === idx);
                      if(data){
                        document.getElementById('educationId').value = data.Id || '';
                        document.getElementById('educationTitle').value = data.Title || '';
                        document.getElementById('educationName').value = data.Name || '';
                        document.getElementById('educationGradePoint').value = data.GradePoint || '';
                        document.getElementById('educationStartWhen').value = data.StartWhen ? data.StartWhen.substring(0,10) : '';
                        document.getElementById('educationEndWhen').value = data.EndWhen ? data.EndWhen.substring(0,10) : '';
                        document.getElementById('educationInformation').value = data.Information || '';
                      }
                }
                let html = '';
                workList.forEach((work, index) => {
                html += `<tr>
                    <td>${work.Company || ''}</td>
                    <td>${work.Position || ''}</td>
                    <td>${work.StartWhen || ''}</td>
                    <td>${work.EndWhen || ''}</td>
                    <td>${work.Information || ''}</td>
                    <td><button class="btn btn-sm btn-danger" onclick="deleteInformation(event,${index},'Work')">Sil</button></td>
                </tr>`;
                });
                $("#workTable tbody").html(html);
            }
            else if(type === "Skill"){
                  if(index !== null){
                      const loadedData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Skills));
                      const idx = typeof index === "string" ? parseInt(index, 10) : index;
                      const data = loadedData.find(a => a.Id === idx);
                      if(data){
                        document.getElementById('educationId').value = data.Id || '';
                        document.getElementById('educationTitle').value = data.Title || '';
                        document.getElementById('educationName').value = data.Name || '';
                        document.getElementById('educationGradePoint').value = data.GradePoint || '';
                        document.getElementById('educationStartWhen').value = data.StartWhen ? data.StartWhen.substring(0,10) : '';
                        document.getElementById('educationEndWhen').value = data.EndWhen ? data.EndWhen.substring(0,10) : '';
                        document.getElementById('educationInformation').value = data.Information || '';
                      }
                }
                let html = '';
                skillList.forEach((skill, index) => {
                html += `<tr>
                    <td>${skill.Title || ''}</td>
                    <td>${skill.Order || ''}</td>
                    <td>${skill.Information || ''}</td>
                    <td><button class="btn btn-sm btn-danger" onclick="deleteInformation(event,${index},'Skill')">Sil</button></td>
                </tr>`;
                });
                $("#skillTable tbody").html(html);
            }
            else if (type == "Social")
            {
                  if(index !== null){
                      const loadedData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Socials));
                      const idx = typeof index === "string" ? parseInt(index, 10) : index;
                      const data = loadedData.find(a => a.Id === idx);
                      if(data){
                        document.getElementById('educationId').value = data.Id || '';
                        document.getElementById('educationTitle').value = data.Title || '';
                        document.getElementById('educationName').value = data.Name || '';
                        document.getElementById('educationGradePoint').value = data.GradePoint || '';
                        document.getElementById('educationStartWhen').value = data.StartWhen ? data.StartWhen.substring(0,10) : '';
                        document.getElementById('educationEndWhen').value = data.EndWhen ? data.EndWhen.substring(0,10) : '';
                        document.getElementById('educationInformation').value = data.Information || '';
                      }
                }
                let html = '';
                socialList.forEach((social, index) => {
                html += `<tr>
                    <td>${social.Name|| ''}</td>
                    <td>${social.Link || ''}</td>
                     <td>${social.Order|| ''}</td>
                    <td><button class="btn btn-sm btn-danger" onclick="deleteInformation(event,${index},'Social')">Sil</button></td>
                </tr>`;
                });
                $("#socialTable tbody").html(html);
            }
            else if (type == "Reference")
            {
                  if(index !== null){
                      const loadedData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.References));
                      const idx = typeof index === "string" ? parseInt(index, 10) : index;
                      const data = loadedData.find(a => a.Id === idx);
                      if(data){
                        document.getElementById('educationId').value = data.Id || '';
                        document.getElementById('educationTitle').value = data.Title || '';
                        document.getElementById('educationName').value = data.Name || '';
                        document.getElementById('educationGradePoint').value = data.GradePoint || '';
                        document.getElementById('educationStartWhen').value = data.StartWhen ? data.StartWhen.substring(0,10) : '';
                        document.getElementById('educationEndWhen').value = data.EndWhen ? data.EndWhen.substring(0,10) : '';
                        document.getElementById('educationInformation').value = data.Information || '';
                      }
                }
                let html = '';
                referenceList.forEach((reference, index) => {
                html += `<tr>
                    <td>${reference.Company || ''}</td>
                    <td>${reference.Name || ''}</td>
                    <td>${reference.Title || ''}</td>
                    <td>${reference.Info || ''}</td>
                    <td>${reference.Mail || ''}</td>
                    <td>${reference.Phone || ''}</td>
                    <td>${reference.Order || ''}</td>
                    <td><button class="btn btn-sm btn-danger" onclick="deleteInformation(event,${index},'Reference')">Sil</button></td>
                </tr>`;
                });
                $("#referenceTable tbody").html(html);
            }
            else if (type == "Language")
            {
                  if(index !== null){
                      const loadedData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Languages));
                      const idx = typeof index === "string" ? parseInt(index, 10) : index;
                      const data = loadedData.find(a => a.Id === idx);
                      if(data){
                        document.getElementById('educationId').value = data.Id || '';
                        document.getElementById('educationTitle').value = data.Title || '';
                        document.getElementById('educationName').value = data.Name || '';
                        document.getElementById('educationGradePoint').value = data.GradePoint || '';
                        document.getElementById('educationStartWhen').value = data.StartWhen ? data.StartWhen.substring(0,10) : '';
                        document.getElementById('educationEndWhen').value = data.EndWhen ? data.EndWhen.substring(0,10) : '';
                        document.getElementById('educationInformation').value = data.Information || '';
                      }
                }
                let html = '';
                languageList.forEach((language, index) => {
                html += `<tr>
                    <td>${language.Name || ''}</td>
                    <td>${language.Order || ''}</td>
                    <td>${language.Info || ''}</td>
                    <td><button class="btn btn-sm btn-danger" onclick="deleteInformation(event,${index},'Language')">Sil</button></td>
                </tr>`;
                });
                $("#languageTable tbody").html(html);
            }
            else if (type == "Certificate")
            {
                  if(index !== null){
                      const loadedData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Certificates));
                      const idx = typeof index === "string" ? parseInt(index, 10) : index;
                      const data = loadedData.find(a => a.Id === idx);
                      if(data){
                        document.getElementById('educationId').value = data.Id || '';
                        document.getElementById('educationTitle').value = data.Title || '';
                        document.getElementById('educationName').value = data.Name || '';
                        document.getElementById('educationGradePoint').value = data.GradePoint || '';
                        document.getElementById('educationStartWhen').value = data.StartWhen ? data.StartWhen.substring(0,10) : '';
                        document.getElementById('educationEndWhen').value = data.EndWhen ? data.EndWhen.substring(0,10) : '';
                        document.getElementById('educationInformation').value = data.Information || '';
                      }
                }
                let html = '';
                certificateList.forEach((certificate, index) => {
                html += `<tr>
                    <td>${certificate.Company || ''}</td>
                    <td>${certificate.Info || ''}</td>
                    <td>${certificate.StartWhen || ''}</td>
                    <td>${certificate.EndWhen || ''}</td>
                    <td><button class="btn btn-sm btn-danger" onclick="deleteInformation(event,${index},'Certificate')">Sil</button></td>
                </tr>`;
                });
                $("#certificateTable tbody").html(html);
            }
            else if (type == "Project")
            {
                  if(index !== null){
                      const loadedData = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Projects));
                      const idx = typeof index === "string" ? parseInt(index, 10) : index;
                      const data = loadedData.find(a => a.Id === idx);
                      if(data){
                        document.getElementById('educationId').value = data.Id || '';
                        document.getElementById('educationTitle').value = data.Title || '';
                        document.getElementById('educationName').value = data.Name || '';
                        document.getElementById('educationGradePoint').value = data.GradePoint || '';
                        document.getElementById('educationStartWhen').value = data.StartWhen ? data.StartWhen.substring(0,10) : '';
                        document.getElementById('educationEndWhen').value = data.EndWhen ? data.EndWhen.substring(0,10) : '';
                        document.getElementById('educationInformation').value = data.Information || '';
                      }
                }
                 let html = '';
                projectList.forEach((project, index) => {
                html += `<tr>
                    <td>${project.Name || ''}</td>
                    <td>${project.StartWhen || ''}</td>
                    <td>${project.EndWhen || ''}</td>
                    <td>${project.Order || ''}</td>
                    <td>${project.Info || ''}</td>
                    <td><button class="btn btn-sm btn-danger" onclick="deleteInformation(event,${index},'Project')">Sil</button></td>
                </tr>`;
                });
                $("#projectTable tbody").html(html);
            }
            else
            {

            }
        }

        // Silme onayı modal butonuna tıklanınca işlem yap
        document.getElementById('confirmDeleteBtn').onclick = function () {
            const modal = bootstrap.Modal.getInstance(document.getElementById('deleteConfirmModal'));

            if (formToDelete) {
                formToDelete.submit();
                formToDelete = null;
            }
            else if(deleteIndex != null){
                if (deleteType === "Education") {
                    educationList.splice(deleteIndex, 1);
                }
                else if (deleteType === "Work") {
                    workList.splice(deleteIndex, 1);
                }
                else if (deleteType === "Skill") {
                    skillList.splice(deleteIndex, 1);
                }
                else if (deleteType == "Social")
                {
                    socialList.splice(deleteIndex, 1);
                }
                else if (deleteType == "Reference")
                {
                    referenceList.splice(deleteIndex, 1);
                }
                else if (deleteType == "Language")
                {
                    languageList.splice(deleteIndex, 1);
                }
                else if (deleteType == "Certificate")
                {
                    certificateList.splice(deleteIndex, 1);
                }
                else if (deleteType == "Project")
                {
                    projectList.splice(deleteIndex, 1);
                }
                else{

                }
                  updateTable(deleteType);
                  deleteIndex = null;
            }
            else{

            }

            modal.hide();
        };

        // Listesini kaydet

        function SaveInformation(type){
             const token = $('input[name="__RequestVerificationToken"]').val();
             var request = "";
             var errorMsg="";

            if(type == "Education"){
                request = JSON.stringify(educationList);
                errorMsg = "Eğitim bilgileri kaydedilemedi."
            }
            else if(type === "Work"){
                  request = JSON.stringify(workList);
                   errorMsg = "Çalışma bilgileri kaydedilemedi."
            }
            else if(type==="Skill"){
                  request = JSON.stringify(skillList);
                   errorMsg = "Teknik beceri bilgileri kaydedilemedi."
            }
            else if(type === "Social"){
                  request = JSON.stringify(socialList);
                   errorMsg = "Sosyal ağ bilgileri kaydedilemedi."
            }
            else if(type === "Language"){
                  request = JSON.stringify(languageList);
                   errorMsg = "Dil bilgileri kaydedilemedi."
            }
            else if(type === "Reference"){
                  request = JSON.stringify(referenceList);
                   errorMsg = "Referans bilgileri kaydedilemedi."
            }
            else if(type==="Certificate"){
                  request = JSON.stringify(certificateList);
                   errorMsg = "Sertifika bilgileri kaydedilemedi."
            }
            else if(type === "Project"){
                  request = JSON.stringify(projectList);
                   errorMsg = "Proje bilgileri kaydedilemedi."
            }
            else{
                 errorMsg = "Genel Hata!"
            }

             $.ajax({
                type: "POST",
                url: "/Profile/SaveInformation",
                data: {
                    __RequestVerificationToken: token,
                    data: request,
                    dataType: type
                },
                success: function (data) {
                    window.location.href = data.redirectUrl;
                },
                error: function () {
                    showAlertModal(errorMsg, "Hata", "danger");
                }
            });
        };

    </script>
}